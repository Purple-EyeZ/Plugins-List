import{showPopup as i,showToast as u}from"./shared.js";let l=[];function m(t){const e=localStorage.getItem("previousPluginsState");if(!e)return localStorage.setItem("previousPluginsState",JSON.stringify(t)),null;const n=JSON.parse(e),s=new Map(n.map(a=>[a.name,a])),o={updated:[],added:[]};for(const a of t){const r=s.get(a.name);r?(r.status!==a.status&&o.updated.push({name:a.name,oldStatus:r.status,newStatus:a.status}),s.delete(a.name)):o.added.push(a)}return localStorage.setItem("previousPluginsState",JSON.stringify(t)),o}function b(t){if(!t||t.updated.length===0&&t.added.length===0)return;const e=o=>{switch(o){case"working":return"\u2705";case"warning":return"\u26A0\uFE0F";case"broken":return"\u274C";default:return""}};let n="",s=!0;t.updated.length>0&&(n+='<h4 style="margin-top: 0px; margin-bottom: 5px;">\u{1F503} Status changes:</h4>',n+=t.updated.map(o=>`${o.name}: ${e(o.oldStatus)} ${o.oldStatus} \u2192 ${e(o.newStatus)} ${o.newStatus}`).join("<br>"),s=!1),t.added.length>0&&(n+=`<h4 ${s?'style="margin-top: 0px; margin-bottom: 5px;"':'style="margin-top: 25px; margin-bottom: 5px;"'}>\u{1F680} Added:</h4>`,n+=t.added.map(a=>`${a.name} (${e(a.status)} ${a.status})`).join("<br>")),i({title:"Plugin Changes Detected",message:"Here is a summary of plugin changes since your last visit:",infoBox:n,primaryButton:{text:"Got it!",action:()=>hidePopup()},secondaryButton:null})}fetch("plugins-data.json").then(t=>t.json()).then(t=>{l=t;const e=m(t);e&&(e.updated.length>0||e.added.length>0)&&b(e),renderPlugins()}).catch(t=>{console.error("Error loading plugins data:",t)});const c=document.getElementById("plugins-container"),d=document.getElementById("sort-select"),p=document.getElementById("show-broken");function h(t){const e=document.createElement("div");e.className="plugin-card";let n="";switch(t.status){case"working":n="status-working";break;case"warning":n="status-warning";break;case"broken":n="status-broken";break}const s=t.authors.join(", ");e.innerHTML=`
    <div class="plugin-header">
        <h3 class="plugin-name">${t.name}</h3>
        <span class="plugin-status ${n}">${t.status}</span>
    </div>
    <div class="plugin-author">By: ${s}</div>
    <div class="plugin-description">${t.description}</div>
    <div class="plugin-buttons">
        <button class="plugin-button source-button" data-url="${t.sourceUrl}">Source Code</button>
        <button class="plugin-button plugin-copy-button" data-status="${t.status}" data-url="${t.installUrl}" data-warning="${t.warningMessage||""}">Copy Link</button>
    </div>
`;const o=e.querySelector(".source-button"),a=e.querySelector(".plugin-copy-button");return o.addEventListener("click",()=>{window.open(t.sourceUrl,"_blank")}),a.addEventListener("click",()=>{if(t.status==="working")g(t.installUrl),u(`Link for ${t.name} copied to clipboard!`);else{const r=t.status==="broken"?"Installing broken plugins may crash your client or cause unexpected behavior.":"This plugin may not work as expected.",k=t.status==="broken"?"This plugin is broken":"This plugin is partially broken";i({title:"Warning!",message:r,infoBox:t.warningMessage||"",primaryButton:{text:"Copy Anyway",action:()=>{g(t.installUrl),u(`Link for ${t.name} copied to clipboard!`),hidePopup()}},secondaryButton:{text:"Cancel",action:()=>hidePopup()}})}}),e}function g(t){navigator.clipboard.writeText(t).catch(e=>{console.error("Failed to copy: ",e)})}window.renderPlugins=function(){c.innerHTML="";let e=[...l];switch(p.checked||(e=e.filter(n=>n.status!=="broken")),d.value){case"default":e.sort((n,s)=>n.status==="broken"&&s.status!=="broken"?1:n.status!=="broken"&&s.status==="broken"?-1:n.name.localeCompare(s.name));break;case"broken-first":e.sort((n,s)=>n.status==="broken"&&s.status!=="broken"?-1:n.status!=="broken"&&s.status==="broken"?1:n.name.localeCompare(s.name));break;case"alphabetical":e.sort((n,s)=>n.name.localeCompare(s.name));break}for(const n of e){const s=h(n);c.appendChild(s)}},d.addEventListener("change",renderPlugins),p.addEventListener("change",renderPlugins),document.addEventListener("DOMContentLoaded",renderPlugins);
